;; ==========================================================
;; Class accessors
;; Bigloo (4.6a)
;; Inria -- Sophia Antipolis     Tue Sep 3 07:55:05 AM CEST 2024 
;; (bigloo -classgen SawJvm/funcall.scm)
;; ==========================================================

;; The directives
(directives

;; indexed
(cond-expand ((and bigloo-class-sans (not bigloo-class-generate))
  (export
    (inline make-indexed::indexed id1184::symbol name1185::obj type1186::type value1187::value access1188::obj fast-alpha1189::obj removable1190::obj occurrence1191::long occurrencew1192::long user?1193::bool module1194::symbol import1195::obj evaluable?1196::bool eval?1197::bool library1198::obj pragma1199::obj src1200::obj qualified-type-name1201::bstring init1202::obj alias1203::obj index1204::int)
    (inline indexed?::bool ::obj)
    (indexed-nil::indexed)
    (inline indexed-index::int ::indexed)
    (inline indexed-index-set! ::indexed ::int)
    (inline indexed-alias::obj ::indexed)
    (inline indexed-alias-set! ::indexed ::obj)
    (inline indexed-init::obj ::indexed)
    (inline indexed-init-set! ::indexed ::obj)
    (inline indexed-qualified-type-name::bstring ::indexed)
    (inline indexed-qualified-type-name-set! ::indexed ::bstring)
    (inline indexed-src::obj ::indexed)
    (inline indexed-src-set! ::indexed ::obj)
    (inline indexed-pragma::obj ::indexed)
    (inline indexed-pragma-set! ::indexed ::obj)
    (inline indexed-library::obj ::indexed)
    (inline indexed-library-set! ::indexed ::obj)
    (inline indexed-eval?::bool ::indexed)
    (inline indexed-eval?-set! ::indexed ::bool)
    (inline indexed-evaluable?::bool ::indexed)
    (inline indexed-evaluable?-set! ::indexed ::bool)
    (inline indexed-import::obj ::indexed)
    (inline indexed-import-set! ::indexed ::obj)
    (inline indexed-module::symbol ::indexed)
    (inline indexed-module-set! ::indexed ::symbol)
    (inline indexed-user?::bool ::indexed)
    (inline indexed-user?-set! ::indexed ::bool)
    (inline indexed-occurrencew::long ::indexed)
    (inline indexed-occurrencew-set! ::indexed ::long)
    (inline indexed-occurrence::long ::indexed)
    (inline indexed-occurrence-set! ::indexed ::long)
    (inline indexed-removable::obj ::indexed)
    (inline indexed-removable-set! ::indexed ::obj)
    (inline indexed-fast-alpha::obj ::indexed)
    (inline indexed-fast-alpha-set! ::indexed ::obj)
    (inline indexed-access::obj ::indexed)
    (inline indexed-access-set! ::indexed ::obj)
    (inline indexed-value::value ::indexed)
    (inline indexed-value-set! ::indexed ::value)
    (inline indexed-type::type ::indexed)
    (inline indexed-type-set! ::indexed ::type)
    (inline indexed-name::obj ::indexed)
    (inline indexed-name-set! ::indexed ::obj)
    (inline indexed-id::symbol ::indexed)))))

;; The definitions
(cond-expand (bigloo-class-sans
;; indexed
(define-inline (make-indexed::indexed id1184::symbol name1185::obj type1186::type value1187::value access1188::obj fast-alpha1189::obj removable1190::obj occurrence1191::long occurrencew1192::long user?1193::bool module1194::symbol import1195::obj evaluable?1196::bool eval?1197::bool library1198::obj pragma1199::obj src1200::obj qualified-type-name1201::bstring init1202::obj alias1203::obj index1204::int) (instantiate::indexed (id id1184) (name name1185) (type type1186) (value value1187) (access access1188) (fast-alpha fast-alpha1189) (removable removable1190) (occurrence occurrence1191) (occurrencew occurrencew1192) (user? user?1193) (module module1194) (import import1195) (evaluable? evaluable?1196) (eval? eval?1197) (library library1198) (pragma pragma1199) (src src1200) (qualified-type-name qualified-type-name1201) (init init1202) (alias alias1203) (index index1204)))
(define-inline (indexed?::bool obj::obj) ((@ isa? __object) obj (@ indexed saw_jvm_funcall)))
(define (indexed-nil::indexed) (class-nil (@ indexed saw_jvm_funcall)))
(define-inline (indexed-index::int o::indexed) (-> |#!bigloo_wallow| o index))
(define-inline (indexed-index-set! o::indexed v::int) (set! (-> |#!bigloo_wallow| o index) v))
(define-inline (indexed-alias::obj o::indexed) (-> |#!bigloo_wallow| o alias))
(define-inline (indexed-alias-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o alias) v))
(define-inline (indexed-init::obj o::indexed) (-> |#!bigloo_wallow| o init))
(define-inline (indexed-init-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o init) v))
(define-inline (indexed-qualified-type-name::bstring o::indexed) (-> |#!bigloo_wallow| o qualified-type-name))
(define-inline (indexed-qualified-type-name-set! o::indexed v::bstring) (set! (-> |#!bigloo_wallow| o qualified-type-name) v))
(define-inline (indexed-src::obj o::indexed) (-> |#!bigloo_wallow| o src))
(define-inline (indexed-src-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o src) v))
(define-inline (indexed-pragma::obj o::indexed) (-> |#!bigloo_wallow| o pragma))
(define-inline (indexed-pragma-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o pragma) v))
(define-inline (indexed-library::obj o::indexed) (-> |#!bigloo_wallow| o library))
(define-inline (indexed-library-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o library) v))
(define-inline (indexed-eval?::bool o::indexed) (-> |#!bigloo_wallow| o eval?))
(define-inline (indexed-eval?-set! o::indexed v::bool) (set! (-> |#!bigloo_wallow| o eval?) v))
(define-inline (indexed-evaluable?::bool o::indexed) (-> |#!bigloo_wallow| o evaluable?))
(define-inline (indexed-evaluable?-set! o::indexed v::bool) (set! (-> |#!bigloo_wallow| o evaluable?) v))
(define-inline (indexed-import::obj o::indexed) (-> |#!bigloo_wallow| o import))
(define-inline (indexed-import-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o import) v))
(define-inline (indexed-module::symbol o::indexed) (-> |#!bigloo_wallow| o module))
(define-inline (indexed-module-set! o::indexed v::symbol) (set! (-> |#!bigloo_wallow| o module) v))
(define-inline (indexed-user?::bool o::indexed) (-> |#!bigloo_wallow| o user?))
(define-inline (indexed-user?-set! o::indexed v::bool) (set! (-> |#!bigloo_wallow| o user?) v))
(define-inline (indexed-occurrencew::long o::indexed) (-> |#!bigloo_wallow| o occurrencew))
(define-inline (indexed-occurrencew-set! o::indexed v::long) (set! (-> |#!bigloo_wallow| o occurrencew) v))
(define-inline (indexed-occurrence::long o::indexed) (-> |#!bigloo_wallow| o occurrence))
(define-inline (indexed-occurrence-set! o::indexed v::long) (set! (-> |#!bigloo_wallow| o occurrence) v))
(define-inline (indexed-removable::obj o::indexed) (-> |#!bigloo_wallow| o removable))
(define-inline (indexed-removable-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o removable) v))
(define-inline (indexed-fast-alpha::obj o::indexed) (-> |#!bigloo_wallow| o fast-alpha))
(define-inline (indexed-fast-alpha-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o fast-alpha) v))
(define-inline (indexed-access::obj o::indexed) (-> |#!bigloo_wallow| o access))
(define-inline (indexed-access-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o access) v))
(define-inline (indexed-value::value o::indexed) (-> |#!bigloo_wallow| o value))
(define-inline (indexed-value-set! o::indexed v::value) (set! (-> |#!bigloo_wallow| o value) v))
(define-inline (indexed-type::type o::indexed) (-> |#!bigloo_wallow| o type))
(define-inline (indexed-type-set! o::indexed v::type) (set! (-> |#!bigloo_wallow| o type) v))
(define-inline (indexed-name::obj o::indexed) (-> |#!bigloo_wallow| o name))
(define-inline (indexed-name-set! o::indexed v::obj) (set! (-> |#!bigloo_wallow| o name) v))
(define-inline (indexed-id::symbol o::indexed) (-> |#!bigloo_wallow| o id))
(define-inline (indexed-id-set! o::indexed v::symbol) (set! (-> |#!bigloo_wallow| o id) v))
))
